name: build-develop

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [[windows-latest,x64-windows,msvc]]
        buildType: [Release]
    runs-on: ${{ matrix.os[0] }}

    steps:
      - uses: actions/checkout@v2
      - uses: lukka/get-cmake@latest

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v10
        with:
          vcpkgGitCommitId: 'a0454d6e18b335cf12da34d925538897d598219b'

      - name: Checkout submodules
        run: |
          git submodule update --init

      - uses: lukka/get-cmake@v3.23.2
      - name: List $RUNNER_WORKSPACE before build
        run: find $RUNNER_WORKSPACE
        shell: bash

      - name: Restore artifacts, or run vcpkg, build (and cache artifacts as post step)
        uses: lukka/run-vcpkg@v10
        id: runvcpkg
        with:
          vcpkgDirectory: '${{ runner.workspace }}/b/vcpkg'
          vcpkgGitCommitId: '${{ matrix.vcpkgCommitId }}'
          # Run vcpkg with the command specified by the `runVcpkgFormatString` input.
          runVcpkgInstall: true
          vcpkgJsonGlob: '**/vcpkg.json'
          appendedCacheKey: vcpkginstall

      - name: Prints output of run-vcpkg's action.
        run: echo "root='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_ROOT_OUT }}', triplet='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_DEFAULT_TRIPLET_OUT }}' "

      - name: Run CMake with Ninja
        uses: lukka/run-cmake@v10
        with:
          cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
          configurePreset: 'ninja-multi-vcpkg'
          buildPreset: 'ninja-multi-vcpkg'

      - name: Upload package
        uses: actions/upload-artifact@v2
        with:
          name: opengloves.zip
          path: ${{ github.workspace }}/opengloves${{ matrix.os[1] }}.zip